
cmake_minimum_required(VERSION 3.14)


project(chessEngine LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Enable Qt automatic tools
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

# Find Qt modules
find_package(Qt6 REQUIRED COMPONENTS Core Widgets Concurrent)


set(COMMON_SOURCES
    src/ChessBoardWidget.cpp
    src/BitBoard.cpp
    src/Board.cpp
    src/AttackTable.cpp
    src/Evaluation.cpp
    src/Node.cpp
    src/Uci.cpp
    src/ChessGameManager.cpp
)


set(HEADERS
    src/ChessBoardWidget.h
    src/BitBoard.h
    src/Board.h
    src/AttackTable.h
    src/Evaluation.h
    src/Node.h
    src/Uci.h
    src/ChessGameManager.h
)

# Create first executable GUI
add_executable(GUI src/main.cpp ${COMMON_SOURCES} ${HEADERS})
target_link_libraries(GUI PRIVATE Qt6::Core Qt6::Widgets Qt6::Concurrent)
target_include_directories(GUI PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src)

# Create second executable (chessEngine)
add_executable(chessEngine src/main2.cpp ${COMMON_SOURCES} ${HEADERS})
target_link_libraries(chessEngine PRIVATE Qt6::Core Qt6::Widgets Qt6::Concurrent)
target_include_directories(chessEngine PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src)

add_subdirectory(src/vendor/CFrame/CFrame)

add_executable(
CFrameUI 
src/CFrameUI.cpp 
src/ChessBoard/ChessBoard.cpp
src/ChessBoard/ChessBoard.h
src/ChessBoard/ChessPiece.h
src/ChessBoard/ChessPiece.cpp)

target_link_libraries(CFrameUI CFrame)

file(COPY ${CMAKE_SOURCE_DIR}/resources DESTINATION ${CMAKE_BINARY_DIR})

add_definitions(-DCF_PLATFORM_WINDOWS)
